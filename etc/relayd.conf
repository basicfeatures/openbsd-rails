egress="XX.XXX.XXX.XX"

table <myapp1> { 127.0.0.1 }
myapp1_port="XXXXX"

table <myapp2> { 127.0.0.1 }
myapp2_port="XXXXX"

table <httpd> { 127.0.0.1 }
httpd_port="80"

http protocol "http" {
  match request header set "Connection" value "close"
  match response header remove "Server"
}

http protocol "https" {
  pass request header "Host" value "myapp1.com" forward to <myapp1>
  pass request header "Host" value "www.myapp1.com" forward to <myapp1>
  tls keypair "myapp1.com"
  tls keypair "www.myapp1.com"

  pass request header "Host" value "myapp2.com" forward to <myapp1>
  pass request header "Host" value "www.myapp2.com" forward to <myapp1>
  tls keypair "myapp2.com"
  tls keypair "www.myapp2.com"

  # Preserve address headers
  match request header append "X-Forwarded-For" value "$REMOTE_ADDR"
  match request header append "X-Forwarded-Port" value "$REMOTE_PORT"
  match request header append "X-Forwaded-By" value "$SERVER_ADDR:$SERVER_PORT"

  match request header set "Connection" value "close"

  match response header remove "Server"

  # Best practice security headers
  # https://securityheaders.com/
  match response header append "Strict-Transport-Security" value "max-age=31536000; includeSubDomains"
  match response header append "X-Frame-Options" value SAMEORIGIN
  match response header append "X-XSS-Protection" value "1; mode=block"
  match response header append "X-Content-Type-Options" value nosniff
  match response header append "Referrer-Policy" value strict-origin
  match response header append "Feature-Policy" value "accelerometer 'none'; camera 'none'; geolocation 'none'; gyroscope 'none'; magnetometer 'none'; microphone 'none'; payment 'none'; usb 'none'"
}

relay "http" {
  listen on $egress port http

  protocol "http"

  forward to <httpd> port $httpd_port
}

relay "https" {
  listen on $egress port https tls

  protocol "https"

  forward to <httpd> port $httpd_port
  forward to <myapp1> port $myapp1_port
  forward to <myapp2> port $myapp2_port
}

